name: builder

on:
  push:
    branches: master
  workflow_dispatch:

jobs:
  job-14-jre:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx
        # linux/386, linux/arm temporarily disabled.
        # linus/ppc64le currently does not work due to an unknown privilege violation. (might be qemu?)
        run: |
          cd docker
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/armhf,linux/s390x \
            --output "type=image,push=true" \
            -f jre14.Dockerfile -t jcxldn/pterodactyl-runners:14-jre .
  job-mcr:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: 
        build: ["mcr-paper-alpine", "mcr-purpur-alpine", "mcr-waterfall-alpine", "mcr-geyser-alpine", "mcr-velocity-alpine", "mcr-fabric-alpine"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx
        run: |
          cd docker
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=true" \
            -f ${{ matrix.build }}.Dockerfile -t jcxldn/pterodactyl-runners:${{ matrix.build }} .
